initSidebarItems({"constant":[["ACCESSIBLE_VALUE_UNDEFINED",""],["INVALID_LIST_POSITION",""],["NONE_ACCESSIBLE",""],["NONE_ACTIONABLE",""],["NONE_ADJUSTMENT",""],["NONE_APPLICATION",""],["NONE_APPLICATION_WINDOW",""],["NONE_APP_CHOOSER",""],["NONE_BOX",""],["NONE_BUILDABLE",""],["NONE_BUILDER_SCOPE",""],["NONE_BUTTON",""],["NONE_CELL_AREA",""],["NONE_CELL_AREA_CONTEXT",""],["NONE_CELL_EDITABLE",""],["NONE_CELL_LAYOUT",""],["NONE_CELL_RENDERER",""],["NONE_CELL_RENDERER_TEXT",""],["NONE_CHECK_BUTTON",""],["NONE_COLOR_CHOOSER",""],["NONE_COMBO_BOX",""],["NONE_CONSTRAINT_TARGET",""],["NONE_DIALOG",""],["NONE_DRAWING_AREA",""],["NONE_EDITABLE",""],["NONE_ENTRY",""],["NONE_ENTRY_BUFFER",""],["NONE_EVENT_CONTROLLER",""],["NONE_EXPRESSION",""],["NONE_FILE_CHOOSER",""],["NONE_FILTER",""],["NONE_FIXED",""],["NONE_FLOW_BOX_CHILD",""],["NONE_FONT_CHOOSER",""],["NONE_FRAME",""],["NONE_GESTURE",""],["NONE_GESTURE_DRAG",""],["NONE_GESTURE_SINGLE",""],["NONE_GL_AREA",""],["NONE_GRID",""],["NONE_IM_CONTEXT",""],["NONE_IM_CONTEXT_SIMPLE",""],["NONE_IM_MULTICONTEXT",""],["NONE_LAYOUT_CHILD",""],["NONE_LAYOUT_MANAGER",""],["NONE_LIST_BASE",""],["NONE_LIST_BOX_ROW",""],["NONE_LIST_ITEM_FACTORY",""],["NONE_LIST_STORE",""],["NONE_MEDIA_FILE",""],["NONE_MEDIA_STREAM",""],["NONE_MOUNT_OPERATION",""],["NONE_MULTI_FILTER",""],["NONE_NATIVE",""],["NONE_NATIVE_DIALOG",""],["NONE_ORIENTABLE",""],["NONE_POPOVER",""],["NONE_PRINT_OPERATION",""],["NONE_PRINT_OPERATION_PREVIEW",""],["NONE_RANGE",""],["NONE_RECENT_MANAGER",""],["NONE_ROOT",""],["NONE_SCALE",""],["NONE_SCALE_BUTTON",""],["NONE_SCROLLABLE",""],["NONE_SELECTION_MODEL",""],["NONE_SHORTCUT_ACTION",""],["NONE_SHORTCUT_MANAGER",""],["NONE_SHORTCUT_TRIGGER",""],["NONE_SORTER",""],["NONE_STYLE_CONTEXT",""],["NONE_STYLE_PROVIDER",""],["NONE_TEXT_BUFFER",""],["NONE_TEXT_CHILD_ANCHOR",""],["NONE_TEXT_MARK",""],["NONE_TEXT_TAG",""],["NONE_TEXT_VIEW",""],["NONE_TOGGLE_BUTTON",""],["NONE_TREE_DRAG_DEST",""],["NONE_TREE_DRAG_SOURCE",""],["NONE_TREE_MODEL",""],["NONE_TREE_MODEL_FILTER",""],["NONE_TREE_MODEL_SORT",""],["NONE_TREE_SORTABLE",""],["NONE_TREE_STORE",""],["NONE_TREE_VIEW",""],["NONE_WIDGET",""],["NONE_WINDOW",""],["NONE_WINDOW_GROUP",""],["PRIORITY_RESIZE",""],["STYLE_PROVIDER_PRIORITY_APPLICATION",""],["STYLE_PROVIDER_PRIORITY_FALLBACK",""],["STYLE_PROVIDER_PRIORITY_SETTINGS",""],["STYLE_PROVIDER_PRIORITY_THEME",""],["STYLE_PROVIDER_PRIORITY_USER",""],["TEXT_VIEW_PRIORITY_VALIDATE",""]],"enum":[["AccessibleAutocomplete","The possible values for the [`crate::AccessibleProperty::Autocomplete`] accessible property."],["AccessibleInvalidState","The possible values for the [`crate::AccessibleState::Invalid`] accessible state."],["AccessibleProperty","The possible accessible properties of a `GtkAccessible`."],["AccessibleRelation","The possible accessible relations of a `GtkAccessible`."],["AccessibleRole","The accessible role for a `GtkAccessible` implementation."],["AccessibleSort","The possible values for the [`crate::AccessibleProperty::Sort`] accessible property."],["AccessibleState","The possible accessible states of a `GtkAccessible`."],["AccessibleTristate","The possible values for the [`crate::AccessibleState::Pressed`] accessible state."],["Align","Controls how a widget deals with extra space in a single dimension."],["ArrowType","Used to indicate the direction in which an arrow should point."],["AssistantPageType","Determines the page role inside a `GtkAssistant`."],["BaselinePosition","Baseline position in a row of widgets."],["BorderStyle","Describes how the border of a UI element should be rendered."],["BuilderError","Error codes that identify various errors that can occur while using [`crate::Builder`]."],["ButtonsType","Prebuilt sets of buttons for `GtkDialog`."],["CellRendererAccelMode","Determines if the edited accelerators are GTK accelerators. If they are, consumed modifiers are suppressed, only accelerators accepted by GTK are allowed, and the accelerators are rendered in the same way as they are in menus."],["CellRendererMode","Identifies how the user can interact with a particular cell."],["ConstraintAttribute","The widget attributes that can be used when creating a `GtkConstraint`."],["ConstraintRelation","The relation between two terms of a constraint."],["ConstraintStrength","The strength of a constraint, expressed as a symbolic constant."],["ConstraintVflParserError","Domain for VFL parsing errors."],["CornerType","Specifies which corner a child widget should be placed in when packed into a `GtkScrolledWindow.`"],["CssParserError","Errors that can occur while parsing CSS."],["CssParserWarning","Warnings that can occur while parsing CSS."],["DeleteType","Passed to various keybinding signals for deleting text."],["DirectionType","Focus movement types."],["EditableProperties",""],["EntryIconPosition","Specifies the side of the entry at which an icon is placed."],["EventSequenceState","Describes the state of a `GdkEventSequence` in a `GtkGesture`."],["FileChooserAction","Describes whether a `GtkFileChooser` is being used to open existing files or to save to a possibly new file."],["FileChooserError","These identify the various errors that can occur while calling `GtkFileChooser` functions."],["FilterChange","Describes changes in a filter in more detail and allows objects using the filter to optimize refiltering items."],["FilterMatch","Describes the known strictness of a filter."],["IconSize","Built-in icon sizes."],["IconThemeError","Error codes for `GtkIconTheme` operations."],["IconViewDropPosition","An enum for determining where a dropped item goes."],["ImageType","Describes the image data representation used by a [class`Gtk.Image`]."],["InputPurpose","Describes primary purpose of the input widget."],["Justification","Used for justifying the text inside a `GtkLabel` widget."],["LevelBarMode","Describes how `GtkLevelBar` contents should be rendered."],["License","The type of license for an application."],["MessageType","The type of message being displayed in a `GtkMessageDialog`."],["MovementStep","Passed as argument to various keybinding signals for moving the cursor position."],["NotebookTab","The parameter used in the action signals of `GtkNotebook`."],["NumberUpLayout","Used to determine the layout of pages on a sheet when printing multiple pages per sheet."],["Ordering","Describes the way two values can be compared."],["Orientation","Represents the orientation of widgets and other objects."],["Overflow","Defines how content overflowing a given area should be handled."],["PackType","Represents the packing location of a children in its parent."],["PadActionType","The type of a pad action."],["PageOrientation","See also [`crate::PrintSettings::set_orientation()`]."],["PageSet","See also [`crate::PrintJob::set_page_set()`]."],["PanDirection","Describes the panning direction of a `GtkGesturePan`"],["PolicyType","Determines how the size should be computed to achieve the one of the visibility mode for the scrollbars."],["PositionType","Describes which edge of a widget a certain feature is positioned at."],["PrintDuplex","See also [`crate::PrintSettings::set_duplex()`]."],["PrintError","Error codes that identify various errors that can occur while using the GTK printing support."],["PrintOperationAction","Determines what action the print operation should perform."],["PrintOperationResult","The result of a print operation."],["PrintPages","See also [`crate::PrintJob::set_pages()`]"],["PrintQuality","See also [`crate::PrintSettings::set_quality()`]."],["PrintStatus","The status gives a rough indication of the completion of a running print operation."],["PropagationLimit","Describes limits of a `GtkEventController` for handling events targeting other widgets."],["PropagationPhase","Describes the stage at which events are fed into a `GtkEventController`."],["RecentManagerError","Error codes for [`crate::RecentManager`] operations"],["ResponseType","Predefined values for use as response ids in [`crate::prelude::DialogExt::add_button()`]."],["RevealerTransitionType","These enumeration values describe the possible transitions when the child of a `GtkRevealer` widget is shown or hidden."],["ScrollStep","Passed as argument to various keybinding signals."],["ScrollType","Scrolling types."],["ScrollablePolicy","Defines the policy to be used in a scrollable widget when updating the scrolled window adjustments in a given orientation."],["SelectionMode","Used to control what selections users are allowed to make."],["SensitivityType","Determines how GTK handles the sensitivity of various controls, such as combo box buttons."],["ShortcutScope","Describes where `GtkShortcut`s added to a `GtkShortcutController` get handled."],["ShortcutType","`ShortcutType` specifies the kind of shortcut that is being described."],["SizeGroupMode","The mode of the size group determines the directions in which the size group affects the requested sizes of its component widgets."],["SizeRequestMode","Specifies a preference for height-for-width or width-for-height geometry management."],["SortColumn",""],["SortType","Determines the direction of a sort."],["SorterChange","Describes changes in a sorter in more detail and allows users to optimize resorting."],["SorterOrder","Describes the type of order that a `GtkSorter` may produce."],["SpinButtonUpdatePolicy","Determines whether the spin button displays values outside the adjustment bounds."],["SpinType","The values of the `SpinType` enumeration are used to specify the change to make in [`crate::SpinButton::spin()`]."],["StackTransitionType","Possible transitions between pages in a `GtkStack` widget."],["StringFilterMatchMode","Specifies how search strings are matched inside text."],["SystemSetting","Values that can be passed to the `WidgetClass`.system_setting_changed vfunc."],["TextDirection","Reading directions for text."],["TextExtendSelection","Granularity types that extend the text selection. Use the [`crate::TextView::extend-selection`] signal to customize the selection."],["TextViewLayer","Used to reference the layers of [`crate::TextView`] for the purpose of customized drawing with the ::snapshot_layer vfunc."],["TextWindowType","Used to reference the parts of [`crate::TextView`]."],["TreeViewColumnSizing","The sizing method the column uses to determine its width. Please note that [`Self::Autosize`] are inefficient for large views, and can make columns appear choppy."],["TreeViewDropPosition","An enum for determining where a dropped row goes."],["TreeViewGridLines","Used to indicate which grid lines to draw in a tree view."],["Unit","See also [`crate::PrintSettings::set_paper_width()`]."],["WrapMode","Describes a type of line wrapping."]],"fn":[["accelerator_get_default_mod_mask",""],["accelerator_get_label",""],["accelerator_get_label_with_keycode",""],["accelerator_name",""],["accelerator_name_with_keycode",""],["accelerator_parse",""],["accelerator_valid",""],["binary_age",""],["check_version",""],["css_parser_warning_quark",""],["debug_flags",""],["default_language",""],["disable_setlocale",""],["enumerate_printers",""],["hsv_to_rgb",""],["init","Tries to initialize GTK+."],["interface_age",""],["is_initialized","Returns `true` if GTK has been initialized."],["is_initialized_main_thread","Returns `true` if GTK has been initialized and this is the main thread."],["locale_direction",""],["major_version",""],["micro_version",""],["minor_version",""],["print_run_page_setup_dialog",""],["print_run_page_setup_dialog_async",""],["render_activity",""],["render_arrow",""],["render_background",""],["render_check",""],["render_expander",""],["render_focus",""],["render_frame",""],["render_handle",""],["render_icon",""],["render_layout",""],["render_line",""],["render_option",""],["rgb_to_hsv",""],["set_debug_flags",""],["set_initialized","Informs this crate that GTK has been initialized and the current thread is the main one."],["show_about_dialog",""],["show_uri",""],["test_accessible_assertion_message_role",""],["test_accessible_has_property",""],["test_accessible_has_relation",""],["test_accessible_has_role",""],["test_accessible_has_state",""],["test_list_all_types",""],["test_register_all_types",""],["test_widget_wait_for_draw",""],["tree_create_row_drag_content",""],["tree_get_row_drag_data",""]],"mod":[["functions",""],["prelude","Traits intended for blanket imports."],["subclass",""]],"static":[["IM_MODULE_EXTENSION_POINT_NAME",""],["LEVEL_BAR_OFFSET_FULL",""],["LEVEL_BAR_OFFSET_HIGH",""],["LEVEL_BAR_OFFSET_LOW",""],["MEDIA_FILE_EXTENSION_POINT_NAME",""],["PAPER_NAME_A3",""],["PAPER_NAME_A4",""],["PAPER_NAME_A5",""],["PAPER_NAME_B5",""],["PAPER_NAME_EXECUTIVE",""],["PAPER_NAME_LEGAL",""],["PAPER_NAME_LETTER",""],["PRINT_SETTINGS_COLLATE",""],["PRINT_SETTINGS_DEFAULT_SOURCE",""],["PRINT_SETTINGS_DITHER",""],["PRINT_SETTINGS_DUPLEX",""],["PRINT_SETTINGS_FINISHINGS",""],["PRINT_SETTINGS_MEDIA_TYPE",""],["PRINT_SETTINGS_NUMBER_UP",""],["PRINT_SETTINGS_NUMBER_UP_LAYOUT",""],["PRINT_SETTINGS_N_COPIES",""],["PRINT_SETTINGS_ORIENTATION",""],["PRINT_SETTINGS_OUTPUT_BASENAME",""],["PRINT_SETTINGS_OUTPUT_BIN",""],["PRINT_SETTINGS_OUTPUT_DIR",""],["PRINT_SETTINGS_OUTPUT_FILE_FORMAT",""],["PRINT_SETTINGS_OUTPUT_URI",""],["PRINT_SETTINGS_PAGE_RANGES",""],["PRINT_SETTINGS_PAGE_SET",""],["PRINT_SETTINGS_PAPER_FORMAT",""],["PRINT_SETTINGS_PAPER_HEIGHT",""],["PRINT_SETTINGS_PAPER_WIDTH",""],["PRINT_SETTINGS_PRINTER",""],["PRINT_SETTINGS_PRINTER_LPI",""],["PRINT_SETTINGS_PRINT_PAGES",""],["PRINT_SETTINGS_QUALITY",""],["PRINT_SETTINGS_RESOLUTION",""],["PRINT_SETTINGS_RESOLUTION_X",""],["PRINT_SETTINGS_RESOLUTION_Y",""],["PRINT_SETTINGS_REVERSE",""],["PRINT_SETTINGS_SCALE",""],["PRINT_SETTINGS_USE_COLOR",""],["PRINT_SETTINGS_WIN32_DRIVER_EXTRA",""],["PRINT_SETTINGS_WIN32_DRIVER_VERSION",""]],"struct":[["ATContext","`GtkATContext` is an abstract class provided by GTK to communicate to platform-specific assistive technologies API."],["AboutDialog","The `GtkAboutDialog` offers a simple way to display information about a program."],["AboutDialogBuilder","A builder for generating a [`AboutDialog`]."],["Accessible","`GtkAccessible` is an interface for describing UI elements for Assistive Technologies."],["ActionBar","`GtkActionBar` is designed to present contextual actions."],["ActionBarBuilder","A builder for generating a [`ActionBar`]."],["Actionable","The `GtkActionable` interface provides a convenient way of asscociating widgets with actions."],["ActivateAction","A `GtkShortcutAction` that calls [`crate::prelude::WidgetExt::activate()`]."],["Adjustment","`GtkAdjustment` is a model for a numeric value."],["AdjustmentBuilder","A builder for generating a [`Adjustment`]."],["AlternativeTrigger","A `GtkShortcutTrigger` that combines two triggers."],["AlternativeTriggerBuilder","A builder for generating a [`AlternativeTrigger`]."],["AnyFilter","`GtkAnyFilter` matches an item when at least one of its filters matches."],["AppChooser","`GtkAppChooser` is an interface for widgets which allow the user to choose an application."],["AppChooserButton","The `GtkAppChooserButton` lets the user select an application."],["AppChooserButtonBuilder","A builder for generating a [`AppChooserButton`]."],["AppChooserDialog","`GtkAppChooserDialog` shows a `GtkAppChooserWidget` inside a `GtkDialog`."],["AppChooserDialogBuilder","A builder for generating a [`AppChooserDialog`]."],["AppChooserWidget","`GtkAppChooserWidget` is a widget for selecting applications."],["AppChooserWidgetBuilder","A builder for generating a [`AppChooserWidget`]."],["Application","`GtkApplication` is a high-level API for writing applications."],["ApplicationBuilder","A builder for generating a [`Application`]."],["ApplicationInhibitFlags","Types of user actions that may be blocked by `GtkApplication`."],["ApplicationWindow","`GtkApplicationWindow` is a `GtkWindow` subclass that integrates with `GtkApplication`."],["ApplicationWindowBuilder","A builder for generating a [`ApplicationWindow`]."],["AspectFrame","`GtkAspectFrame` preserves the aspect ratio of its child."],["AspectFrameBuilder","A builder for generating a [`AspectFrame`]."],["Assistant","`GtkAssistant` is used to represent a complex as a series of steps."],["AssistantBuilder","A builder for generating a [`Assistant`]."],["AssistantPage","`GtkAssistantPage` is an auxiliary object used by `GtkAssistant."],["AssistantPageBuilder","A builder for generating a [`AssistantPage`]."],["BinLayout","`GtkBinLayout` is a `GtkLayoutManager` subclass useful for create “bins” of widgets."],["Bitset","A `GtkBitset` represents a set of unsigned integers."],["BitsetIter","An opaque, stack-allocated struct for iterating over the elements of a `GtkBitset`."],["BookmarkList","`GtkBookmarkList` is a list model that wraps `GBookmarkFile`."],["BookmarkListBuilder",""],["BoolFilter","`GtkBoolFilter` evaluates a boolean `GtkExpression` to determine whether to include items."],["BoolFilterBuilder","A builder for generating a [`BoolFilter`]."],["Border","A struct that specifies a border around a rectangular area."],["BorderBuilder",""],["Box","The `GtkBox` widget arranges child widgets into a single row or column."],["BoxBuilder","A builder for generating a [`Box`]."],["BoxLayout","`GtkBoxLayout` is a layout manager that arranges children in a single row or column."],["BoxLayoutBuilder","A builder for generating a [`BoxLayout`]."],["Buildable","`GtkBuildable` allows objects to extend and customize their deserialization from ui files."],["Builder","A `GtkBuilder` reads XML descriptions of a user interface and instantiates the described objects."],["BuilderBuilder","A builder for generating a [`Builder`]."],["BuilderClosureFlags","The list of flags that can be passed to [`crate::Builder::create_closure()`]."],["BuilderListItemFactory","`GtkBuilderListItemFactory` is a `GtkListItemFactory` that creates widgets by instantiating `GtkBuilder` UI templates."],["BuilderListItemFactoryBuilder","A builder for generating a [`BuilderListItemFactory`]."],["BuilderScope","`GtkBuilderScope` is an interface to provide language binding support to `GtkBuilder`."],["Button","The `GtkButton` widget is generally used to trigger a callback function that is called when the button is pressed."],["ButtonBuilder","A builder for generating a [`Button`]."],["Calendar","`GtkCalendar` is a widget that displays a Gregorian calendar, one month at a time."],["CalendarBuilder","A builder for generating a [`Calendar`]."],["CallbackAction","A `GtkShortcutAction` that invokes a callback."],["CellArea","An abstract class for laying out `GtkCellRenderers`"],["CellAreaBox","A cell area that renders `GtkCellRenderers` into a row or a column"],["CellAreaBoxBuilder","A builder for generating a [`CellAreaBox`]."],["CellAreaContext","Stores geometrical information for a series of rows in a `CellArea`"],["CellAreaContextBuilder","A builder for generating a [`CellAreaContext`]."],["CellEditable","Interface for widgets that can be used for editing cells"],["CellLayout","An interface for packing cells"],["CellRenderer","An object for rendering a single cell"],["CellRendererAccel","Renders a keyboard accelerator in a cell"],["CellRendererAccelBuilder","A builder for generating a [`CellRendererAccel`]."],["CellRendererCombo","Renders a combobox in a cell"],["CellRendererComboBuilder","A builder for generating a [`CellRendererCombo`]."],["CellRendererPixbuf","Renders a pixbuf in a cell"],["CellRendererPixbufBuilder","A builder for generating a [`CellRendererPixbuf`]."],["CellRendererProgress","Renders numbers as progress bars"],["CellRendererProgressBuilder","A builder for generating a [`CellRendererProgress`]."],["CellRendererSpin","Renders a spin button in a cell"],["CellRendererSpinBuilder","A builder for generating a [`CellRendererSpin`]."],["CellRendererSpinner","Renders a spinning animation in a cell"],["CellRendererSpinnerBuilder","A builder for generating a [`CellRendererSpinner`]."],["CellRendererState","Tells how a cell is to be rendered."],["CellRendererText","Renders text in a cell"],["CellRendererTextBuilder","A builder for generating a [`CellRendererText`]."],["CellRendererToggle","Renders a toggle button in a cell"],["CellRendererToggleBuilder","A builder for generating a [`CellRendererToggle`]."],["CellView","A widget displaying a single row of a `TreeModel`"],["CellViewBuilder","A builder for generating a [`CellView`]."],["CenterBox","`GtkCenterBox` arranges three children in a row, keeping the middle child centered as well as possible."],["CenterBoxBuilder","A builder for generating a [`CenterBox`]."],["CenterLayout","`GtkCenterLayout` is a layout manager that manages up to three children."],["CheckButton","A `GtkCheckButton` places a label next to an indicator."],["CheckButtonBuilder","A builder for generating a [`CheckButton`]."],["ClosureExpression",""],["ColorButton","The `GtkColorButton` allows to open a color chooser dialog to change the color."],["ColorButtonBuilder","A builder for generating a [`ColorButton`]."],["ColorChooser","`GtkColorChooser` is an interface that is implemented by widgets for choosing colors."],["ColorChooserDialog","A dialog for choosing a color."],["ColorChooserDialogBuilder","A builder for generating a [`ColorChooserDialog`]."],["ColorChooserWidget","The `GtkColorChooserWidget` widget lets the user select a color."],["ColorChooserWidgetBuilder","A builder for generating a [`ColorChooserWidget`]."],["ColumnView","`GtkColumnView` presents a large dynamic list of items using multiple columns with headers."],["ColumnViewBuilder","A builder for generating a [`ColumnView`]."],["ColumnViewColumn","`GtkColumnViewColumn` represents the columns being added to `GtkColumnView`."],["ColumnViewColumnBuilder","A builder for generating a [`ColumnViewColumn`]."],["ComboBox","A `GtkComboBox` is a widget that allows the user to choose from a list of valid choices."],["ComboBoxBuilder","A builder for generating a [`ComboBox`]."],["ComboBoxText","A `GtkComboBoxText` is a simple variant of `GtkComboBox` for text-only use cases."],["ComboBoxTextBuilder","A builder for generating a [`ComboBoxText`]."],["ConstantExpression",""],["Constraint","`GtkConstraint` describes a constraint between attributes of two widgets, expressed as a linear equation."],["ConstraintBuilder","A builder for generating a [`Constraint`]."],["ConstraintGuide","A `GtkConstraintGuide` is an invisible layout element in a `GtkConstraintLayout`."],["ConstraintGuideBuilder","A builder for generating a [`ConstraintGuide`]."],["ConstraintLayout","A layout manager using constraints to describe relations between widgets."],["ConstraintLayoutChild","`GtkLayoutChild` subclass for children in a `GtkConstraintLayout`."],["ConstraintLayoutChildBuilder","A builder for generating a [`ConstraintLayoutChild`]."],["ConstraintTarget","The `GtkConstraintTarget` interface is implemented by objects that can be used as source or target in `GtkConstraint`s."],["CssLocation","Represents a location in a file or other source of data parsed by the CSS engine."],["CssProvider","`GtkCssProvider` is an object implementing the `GtkStyleProvider` interface for CSS."],["CssSection","Defines a part of a CSS document."],["CustomFilter","`GtkCustomFilter` determines whether to include items with a callback."],["CustomSorter","`GtkCustomSorter` is a `GtkSorter` implementation that sorts via a callback function."],["DebugFlags",""],["Dialog","Dialogs are a convenient way to prompt the user for a small amount of input."],["DialogBuilder","A builder for generating a [`Dialog`]."],["DialogFlags","Flags used to influence dialog construction."],["DirectoryList","`GtkDirectoryList` is a list model that wraps [`crate::gio::File::enumerate_children_async()`]."],["DirectoryListBuilder",""],["DragIcon","`GtkDragIcon` is a `GtkRoot` implementation for drag icons."],["DragIconBuilder","A builder for generating a [`DragIcon`]."],["DragSource","`GtkDragSource` is an event controller to initiate Drag-And-Drop operations."],["DragSourceBuilder","A builder for generating a [`DragSource`]."],["DrawingArea","`GtkDrawingArea` is a widget that allows drawing with cairo."],["DrawingAreaBuilder","A builder for generating a [`DrawingArea`]."],["DropControllerMotion","`GtkDropControllerMotion` is an event controller tracking the pointer during Drag-and-Drop operations."],["DropControllerMotionBuilder","A builder for generating a [`DropControllerMotion`]."],["DropDown","`GtkDropDown` is a widget that allows the user to choose an item from a list of options."],["DropDownBuilder","A builder for generating a [`DropDown`]."],["DropTarget","`GtkDropTarget` is an event controller to receive Drag-and-Drop operations."],["DropTargetAsync","`GtkDropTargetAsync` is an event controller to receive Drag-and-Drop operations, asynchronously."],["DropTargetAsyncBuilder","A builder for generating a [`DropTargetAsync`]."],["DropTargetBuilder","A builder for generating a [`DropTarget`]."],["Editable","`GtkEditable` is an interface for text editing widgets."],["EditableLabel","A `GtkEditableLabel` is a label that allows users to edit the text by switching to an “edit mode”."],["EditableLabelBuilder","A builder for generating a [`EditableLabel`]."],["EmojiChooser","The `GtkEmojiChooser` is used by text widgets such as `GtkEntry` or `GtkTextView` to let users insert Emoji characters."],["EmojiChooserBuilder","A builder for generating a [`EmojiChooser`]."],["Entry","`GtkEntry` is a single line text entry widget."],["EntryBuffer","A `GtkEntryBuffer` hold the text displayed in a `GtkText` widget."],["EntryBufferBuilder","A builder for generating a [`EntryBuffer`]."],["EntryBuilder","A builder for generating a [`Entry`]."],["EntryCompletion","`GtkEntryCompletion` is an auxiliary object to provide completion functionality for `GtkEntry`."],["EntryCompletionBuilder","A builder for generating a [`EntryCompletion`]."],["EventController","`GtkEventController` is the base class for event controllers."],["EventControllerFocus","`GtkEventControllerFocus` is an event controller to keep track of keyboard focus."],["EventControllerFocusBuilder","A builder for generating a [`EventControllerFocus`]."],["EventControllerKey","`GtkEventControllerKey` is an event controller that provides access to key events."],["EventControllerKeyBuilder","A builder for generating a [`EventControllerKey`]."],["EventControllerLegacy","`GtkEventControllerLegacy` is an event controller that provides raw access to the event stream."],["EventControllerLegacyBuilder","A builder for generating a [`EventControllerLegacy`]."],["EventControllerMotion","`GtkEventControllerMotion` is an event controller tracking the pointer position."],["EventControllerMotionBuilder","A builder for generating a [`EventControllerMotion`]."],["EventControllerScroll","`GtkEventControllerScroll` is an event controller that handles scroll events."],["EventControllerScrollBuilder","A builder for generating a [`EventControllerScroll`]."],["EventControllerScrollFlags","Describes the behavior of a `GtkEventControllerScroll`."],["EveryFilter","`GtkEveryFilter` matches an item when each of its filters matches."],["Expander","`GtkExpander` allows the user to reveal its child by clicking on an expander triangle."],["ExpanderBuilder","A builder for generating a [`Expander`]."],["Expression","`GtkExpression` provides a way to describe references to values."],["ExpressionWatch","An opaque structure representing a watched `GtkExpression`."],["FileChooser","`GtkFileChooser` is an interface that can be implemented by file selection widgets."],["FileChooserDialog","`GtkFileChooserDialog` is a dialog suitable for use with “File Open” or “File Save” commands."],["FileChooserDialogBuilder","A builder for generating a [`FileChooserDialog`]."],["FileChooserNative","`GtkFileChooserNative` is an abstraction of a dialog suitable for use with “File Open” or “File Save as” commands."],["FileChooserNativeBuilder","A builder for generating a [`FileChooserNative`]."],["FileChooserWidget","`GtkFileChooserWidget` is a widget for choosing files."],["FileChooserWidgetBuilder","A builder for generating a [`FileChooserWidget`]."],["FileFilter","`GtkFileFilter` filters files by name or mime type."],["FileFilterBuilder","A builder for generating a [`FileFilter`]."],["Filter","A `GtkFilter` object describes the filtering to be performed by a `GtkFilterListModel`."],["FilterListModel","`GtkFilterListModel` is a list model that filters the elements of the underlying model according to a `GtkFilter`."],["FilterListModelBuilder","A builder for generating a [`FilterListModel`]."],["Fixed","`GtkFixed` places its child widgets at fixed positions and with fixed sizes."],["FixedBuilder","A builder for generating a [`Fixed`]."],["FixedLayout","`GtkFixedLayout` is a layout manager which can place child widgets at fixed positions."],["FixedLayoutChild","`GtkLayoutChild` subclass for children in a `GtkFixedLayout`."],["FixedLayoutChildBuilder","A builder for generating a [`FixedLayoutChild`]."],["FlattenListModel","`GtkFlattenListModel` is a list model that concatenates other list models."],["FlattenListModelBuilder","A builder for generating a [`FlattenListModel`]."],["FlowBox","A `GtkFlowBox` puts child widgets in reflowing grid."],["FlowBoxBuilder","A builder for generating a [`FlowBox`]."],["FlowBoxChild","`GtkFlowBoxChild` is the kind of widget that can be added to a `GtkFlowBox`."],["FlowBoxChildBuilder","A builder for generating a [`FlowBoxChild`]."],["FontButton","The `GtkFontButton` allows to open a font chooser dialog to change the font."],["FontButtonBuilder","A builder for generating a [`FontButton`]."],["FontChooser","`GtkFontChooser` is an interface that can be implemented by widgets for choosing fonts."],["FontChooserDialog","The `GtkFontChooserDialog` widget is a dialog for selecting a font."],["FontChooserDialogBuilder","A builder for generating a [`FontChooserDialog`]."],["FontChooserLevel","Specifies the granularity of font selection that is desired in a `GtkFontChooser`."],["FontChooserWidget","The `GtkFontChooserWidget` widget lets the user select a font."],["FontChooserWidgetBuilder","A builder for generating a [`FontChooserWidget`]."],["Frame","`GtkFrame` is a widget that surrounds its child with a decorative frame and an optional label."],["FrameBuilder","A builder for generating a [`Frame`]."],["GLArea","`GtkGLArea` is a widget that allows drawing with OpenGL."],["GLAreaBuilder","A builder for generating a [`GLArea`]."],["Gesture","`GtkGesture` is the base class for gesture recognition."],["GestureClick","`GtkGestureClick` is a `GtkGesture` implementation for clicks."],["GestureClickBuilder","A builder for generating a [`GestureClick`]."],["GestureDrag","`GtkGestureDrag` is a `GtkGesture` implementation for drags."],["GestureDragBuilder","A builder for generating a [`GestureDrag`]."],["GestureLongPress","`GtkGestureLongPress` is a `GtkGesture` for long presses."],["GestureLongPressBuilder","A builder for generating a [`GestureLongPress`]."],["GesturePan","`GtkGesturePan` is a `GtkGesture` for pan gestures."],["GesturePanBuilder","A builder for generating a [`GesturePan`]."],["GestureRotate","`GtkGestureRotate` is a `GtkGesture` for 2-finger rotations."],["GestureRotateBuilder","A builder for generating a [`GestureRotate`]."],["GestureSingle","`GtkGestureSingle` is a `GtkGestures` subclass optimized for singe-touch and mouse gestures."],["GestureSingleBuilder","A builder for generating a [`GestureSingle`]."],["GestureStylus","`GtkGestureStylus` is a `GtkGesture` specific to stylus input."],["GestureStylusBuilder","A builder for generating a [`GestureStylus`]."],["GestureSwipe","`GtkGestureSwipe` is a `GtkGesture` for swipe gestures."],["GestureSwipeBuilder","A builder for generating a [`GestureSwipe`]."],["GestureZoom","`GtkGestureZoom` is a `GtkGesture` for 2-finger pinch/zoom gestures."],["GestureZoomBuilder","A builder for generating a [`GestureZoom`]."],["Grid","`GtkGrid` is a container which arranges its child widgets in rows and columns."],["GridBuilder","A builder for generating a [`Grid`]."],["GridLayout","`GtkGridLayout` is a layout manager which arranges child widgets in rows and columns."],["GridLayoutBuilder","A builder for generating a [`GridLayout`]."],["GridLayoutChild","`GtkLayoutChild` subclass for children in a `GtkGridLayout`."],["GridLayoutChildBuilder","A builder for generating a [`GridLayoutChild`]."],["GridView","`GtkGridView` presents a large dynamic grid of items."],["GridViewBuilder","A builder for generating a [`GridView`]."],["HeaderBar","`GtkHeaderBar` is a widget for creating custom title bars for windows."],["HeaderBarBuilder","A builder for generating a [`HeaderBar`]."],["IMContext","`GtkIMContext` defines the interface for GTK input methods."],["IMContextSimple","`GtkIMContextSimple` is an input method supporting table-based input methods."],["IMContextSimpleBuilder","A builder for generating a [`IMContextSimple`]."],["IMMulticontext","`GtkIMMulticontext` is input method supporting multiple, switchable input methods."],["IMMulticontextBuilder","A builder for generating a [`IMMulticontext`]."],["IconLookupFlags","Used to specify options for [`crate::IconTheme::lookup_icon()`]."],["IconPaintable","Contains information found when looking up an icon in `GtkIconTheme`."],["IconPaintableBuilder","A builder for generating a [`IconPaintable`]."],["IconTheme","`GtkIconTheme` provides a facility for loading themed icons."],["IconThemeBuilder","A builder for generating a [`IconTheme`]."],["IconView","`GtkIconView` is a widget which displays data in a grid of icons."],["IconViewBuilder","A builder for generating a [`IconView`]."],["Image","The `GtkImage` widget displays an image."],["ImageBuilder","A builder for generating a [`Image`]."],["InfoBar","`GtkInfoBar` can be show messages to the user without a dialog."],["InfoBarBuilder","A builder for generating a [`InfoBar`]."],["Inhibit","Whether to propagate the signal to the default handler."],["InputHints","Describes hints that might be taken into account by input methods or applications."],["KeyvalTrigger","A `GtkShortcutTrigger` that triggers when a specific keyval and modifiers are pressed."],["Label","The `GtkLabel` widget displays a small amount of text."],["LabelBuilder","A builder for generating a [`Label`]."],["LayoutChild","`GtkLayoutChild` is the base class for objects that are meant to hold layout properties."],["LayoutManager","Layout managers are delegate classes that handle the preferred size and the allocation of a widget."],["LevelBar","`GtkLevelBar` is a widget that can be used as a level indicator."],["LevelBarBuilder","A builder for generating a [`LevelBar`]."],["LinkButton","A `GtkLinkButton` is a button with a hyperlink."],["LinkButtonBuilder","A builder for generating a [`LinkButton`]."],["ListBase","`GtkListBase` is the abstract base class for GTK’s list widgets."],["ListBox","`GtkListBox` is a vertical list."],["ListBoxBuilder","A builder for generating a [`ListBox`]."],["ListBoxRow","`GtkListBoxRow` is the kind of widget that can be added to a `GtkListBox`."],["ListBoxRowBuilder","A builder for generating a [`ListBoxRow`]."],["ListItem","`GtkListItem` is used by list widgets to represent items in a `GListModel`."],["ListItemBuilder","A builder for generating a [`ListItem`]."],["ListItemFactory","A `GtkListItemFactory` creates widgets for the items taken from a `GListModel`."],["ListStore","A list-like data structure that can be used with the `TreeView`"],["ListView","`GtkListView` presents a large dynamic list of items."],["ListViewBuilder","A builder for generating a [`ListView`]."],["LockButton","`GtkLockButton` is a widget to obtain and revoke authorizations needed to operate the controls."],["LockButtonBuilder","A builder for generating a [`LockButton`]."],["MapListModel","A `GtkMapListModel` maps the items in a list model to different items."],["MapListModelBuilder","A builder for generating a [`MapListModel`]."],["MediaControls","`GtkMediaControls` is a widget to show controls for a video."],["MediaControlsBuilder","A builder for generating a [`MediaControls`]."],["MediaFile","`GtkMediaFile` implements `GtkMediaStream` for files."],["MediaStream","`GtkMediaStream` is the integration point for media playback inside GTK."],["MenuButton","The `GtkMenuButton` widget is used to display a popup when clicked."],["MenuButtonBuilder","A builder for generating a [`MenuButton`]."],["MessageDialog","`GtkMessageDialog` presents a dialog with some message text."],["MessageDialogBuilder","A builder for generating a [`MessageDialog`]."],["MnemonicAction","A `GtkShortcutAction` that calls [`crate::prelude::WidgetExt::mnemonic_activate()`]."],["MnemonicTrigger","A `GtkShortcutTrigger` that triggers when a specific mnemonic is pressed."],["MountOperation","`GtkMountOperation` is an implementation of `GMountOperation`."],["MountOperationBuilder","A builder for generating a [`MountOperation`]."],["MultiFilter","`GtkMultiFilter` is the base class for filters that combine multiple filters."],["MultiSelection","`GtkMultiSelection` is a `GtkSelectionModel` that allows selecting multiple elements."],["MultiSelectionBuilder","A builder for generating a [`MultiSelection`]."],["MultiSorter","`GtkMultiSorter` combines multiple sorters by trying them in turn."],["NamedAction","A `GtkShortcutAction` that activates an action by name."],["NamedActionBuilder","A builder for generating a [`NamedAction`]."],["Native","`GtkNative` is the interface implemented by all widgets that have their own `GdkSurface`."],["NativeDialog","Native dialogs are platform dialogs that don’t use `GtkDialog`."],["NeverTrigger","A `GtkShortcutTrigger` that never triggers."],["NoSelection","`GtkNoSelection` is a `GtkSelectionModel` that does not allow selecting anything."],["NoSelectionBuilder","A builder for generating a [`NoSelection`]."],["Notebook","`GtkNotebook` is a container whose children are pages switched between using tabs."],["NotebookBuilder","A builder for generating a [`Notebook`]."],["NotebookPage","`GtkNotebookPage` is an auxiliary object used by `GtkNotebook`."],["NotebookPageBuilder","A builder for generating a [`NotebookPage`]."],["NothingAction","A `GtkShortcutAction` that does nothing."],["NumericSorter","`GtkNumericSorter` is a `GtkSorter` that compares numbers."],["NumericSorterBuilder","A builder for generating a [`NumericSorter`]."],["ObjectExpression",""],["Orientable","The `GtkOrientable` interface is implemented by all widgets that can be oriented horizontally or vertically."],["Overlay","`GtkOverlay` is a container which contains a single main child, on top of which it can place “overlay” widgets."],["OverlayBuilder","A builder for generating a [`Overlay`]."],["OverlayLayout","`GtkOverlayLayout` is the layout manager used by `GtkOverlay`."],["OverlayLayoutChild","`GtkLayoutChild` subclass for children in a `GtkOverlayLayout`."],["OverlayLayoutChildBuilder","A builder for generating a [`OverlayLayoutChild`]."],["PadActionEntry","Struct defining a pad action entry."],["PadController","`GtkPadController` is an event controller for the pads found in drawing tablets."],["PadControllerBuilder","A builder for generating a [`PadController`]."],["PageRange","A range of pages to print."],["PageSetup","A `GtkPageSetup` object stores the page size, orientation and margins."],["PageSetupUnixDialog","`GtkPageSetupUnixDialog` implements a page setup dialog for platforms which don’t provide a native page setup dialog, like Unix."],["PageSetupUnixDialogBuilder","A builder for generating a [`PageSetupUnixDialog`]."],["Paned","`GtkPaned` has two panes, arranged either horizontally or vertically."],["PanedBuilder","A builder for generating a [`Paned`]."],["PaperSize","`GtkPaperSize` handles paper sizes."],["ParamSpecExpression","A [`crate::glib::object::ParamSpec`] for properties holding a [`crate::Expression`]."],["PasswordEntry","`GtkPasswordEntry` is an entry that has been tailored for entering secrets."],["PasswordEntryBuilder","A builder for generating a [`PasswordEntry`]."],["PickFlags","Flags that influence the behavior of [`crate::prelude::WidgetExt::pick()`]."],["Picture","The `GtkPicture` widget displays a `GdkPaintable`."],["PictureBuilder","A builder for generating a [`Picture`]."],["Popover","`GtkPopover` is a bubble-like context popup."],["PopoverBuilder","A builder for generating a [`Popover`]."],["PopoverMenu","`GtkPopoverMenu` is a subclass of `GtkPopover` that implements menu behavior."],["PopoverMenuBar","`GtkPopoverMenuBar` presents a horizontal bar of items that pop up popover menus when clicked."],["PopoverMenuBarBuilder","A builder for generating a [`PopoverMenuBar`]."],["PopoverMenuBuilder","A builder for generating a [`PopoverMenu`]."],["PopoverMenuFlags","Flags that affect how popover menus are created from a menu model."],["PrintCapabilities","Specifies which features the print dialog should offer."],["PrintContext","A `GtkPrintContext` encapsulates context information that is required when drawing pages for printing."],["PrintJob","A `GtkPrintJob` object represents a job that is sent to a printer."],["PrintJobBuilder","A builder for generating a [`PrintJob`]."],["PrintOperation","`GtkPrintOperation` is the high-level, portable printing API."],["PrintOperationBuilder","A builder for generating a [`PrintOperation`]."],["PrintOperationPreview","`GtkPrintOperationPreview` is the interface that is used to implement print preview."],["PrintSettings","A `GtkPrintSettings` object represents the settings of a print dialog in a system-independent way."],["PrintUnixDialog","`GtkPrintUnixDialog` implements a print dialog for platforms which don’t provide a native print dialog, like Unix."],["PrintUnixDialogBuilder","A builder for generating a [`PrintUnixDialog`]."],["Printer","A `GtkPrinter` object represents a printer."],["PrinterBuilder","A builder for generating a [`Printer`]."],["ProgressBar","`GtkProgressBar` is typically used to display the progress of a long running operation."],["ProgressBarBuilder","A builder for generating a [`ProgressBar`]."],["PropertyExpression",""],["Range","`GtkRange` is the common base class for widgets which visualize an adjustment."],["RangeBuilder","A builder for generating a [`Range`]."],["RecentData","Meta-data to be passed to [`crate::prelude::RecentManagerExt::add_full()`] when registering a recently used resource."],["RecentInfo","`GtkRecentInfo` contains the metadata associated with an item in the recently used files list."],["RecentManager","`GtkRecentManager` manages and looks up recently used files."],["RecentManagerBuilder","A builder for generating a [`RecentManager`]."],["Requisition","A [`crate::Requisition`]-struct represents the desired size of a widget. See [`Widget`’s geometry management section][geometry-management] for more information."],["Revealer","A `GtkRevealer` animates the transition of its child from invisible to visible."],["RevealerBuilder","A builder for generating a [`Revealer`]."],["Root","`GtkRoot` is the interface implemented by all widgets that can act as a toplevel widget."],["Scale","A `GtkScale` is a slider control used to select a numeric value."],["ScaleBuilder","A builder for generating a [`Scale`]."],["ScaleButton","`GtkScaleButton` provides a button which pops up a scale widget."],["ScaleButtonBuilder","A builder for generating a [`ScaleButton`]."],["Scrollable","`GtkScrollable` is an interface for widgets with native scrolling ability."],["Scrollbar","The `GtkScrollbar` widget is a horizontal or vertical scrollbar."],["ScrollbarBuilder","A builder for generating a [`Scrollbar`]."],["ScrolledWindow","`GtkScrolledWindow` is a container that makes its child scrollable."],["ScrolledWindowBuilder","A builder for generating a [`ScrolledWindow`]."],["SearchBar","`GtkSearchBar` is a container made to have a search entry."],["SearchBarBuilder","A builder for generating a [`SearchBar`]."],["SearchEntry","`GtkSearchEntry` is an entry widget that has been tailored for use as a search entry."],["SearchEntryBuilder","A builder for generating a [`SearchEntry`]."],["SelectionFilterModel","`GtkSelectionFilterModel` is a list model that presents the selection from a `GtkSelectionModel`."],["SelectionFilterModelBuilder","A builder for generating a [`SelectionFilterModel`]."],["SelectionModel","`GtkSelectionModel` is an interface that add support for selection to list models."],["Separator","`GtkSeparator` is a horizontal or vertical separator widget."],["SeparatorBuilder","A builder for generating a [`Separator`]."],["Settings","`GtkSettings` provides a mechanism to share global settings between applications."],["SettingsBuilder","A builder for generating a [`Settings`]."],["Shortcut","A `GtkShortcut` describes a keyboard shortcut."],["ShortcutAction","`GtkShortcutAction` encodes an action that can be triggered by a keyboard shortcut."],["ShortcutActionFlags","List of flags that can be passed to action activation."],["ShortcutBuilder","A builder for generating a [`Shortcut`]."],["ShortcutController","`GtkShortcutController` is an event controller that manages shortcuts."],["ShortcutControllerBuilder","A builder for generating a [`ShortcutController`]."],["ShortcutLabel","`GtkShortcutLabel` displays a single keyboard shortcut or gesture."],["ShortcutLabelBuilder","A builder for generating a [`ShortcutLabel`]."],["ShortcutManager","The `GtkShortcutManager` interface is used to implement shortcut scopes."],["ShortcutTrigger","`GtkShortcutTrigger` tracks how a `GtkShortcut` should be activated."],["ShortcutsGroup","A `GtkShortcutsGroup` represents a group of related keyboard shortcuts or gestures."],["ShortcutsGroupBuilder","A builder for generating a [`ShortcutsGroup`]."],["ShortcutsSection","A `GtkShortcutsSection` collects all the keyboard shortcuts and gestures for a major application mode."],["ShortcutsSectionBuilder","A builder for generating a [`ShortcutsSection`]."],["ShortcutsShortcut","A `GtkShortcutsShortcut` represents a single keyboard shortcut or gesture with a short text."],["ShortcutsShortcutBuilder","A builder for generating a [`ShortcutsShortcut`]."],["ShortcutsWindow","A `GtkShortcutsWindow` shows information about the keyboard shortcuts and gestures of an application."],["ShortcutsWindowBuilder","A builder for generating a [`ShortcutsWindow`]."],["SignalAction","A `GtkShortcut`Action that emits a signal."],["SignalActionBuilder","A builder for generating a [`SignalAction`]."],["SignalListItemFactory","`GtkSignalListItemFactory` is a `GtkListItemFactory` that emits signals to to manage listitems."],["SingleSelection","`GtkSingleSelection` is a `GtkSelectionModel` that allows selecting a single item."],["SingleSelectionBuilder","A builder for generating a [`SingleSelection`]."],["SizeGroup","`GtkSizeGroup` groups widgets together so they all request the same size."],["SizeGroupBuilder","A builder for generating a [`SizeGroup`]."],["SliceListModel","`GtkSliceListModel` is a list model that presents a slice of another model."],["SliceListModelBuilder","A builder for generating a [`SliceListModel`]."],["Snapshot","`GtkSnapshot` assists in creating `GskRenderNodes` for widgets."],["SortListModel","`GtkSortListModel` is a list model that sorts the elements of the underlying model according to a `GtkSorter`."],["SortListModelBuilder","A builder for generating a [`SortListModel`]."],["Sorter","`GtkSorter` is an object to describe sorting criteria."],["SpinButton","A `GtkSpinButton` is an ideal way to allow the user to set the value of some attribute."],["SpinButtonBuilder","A builder for generating a [`SpinButton`]."],["Spinner","A `GtkSpinner` widget displays an icon-size spinning animation."],["SpinnerBuilder","A builder for generating a [`Spinner`]."],["Stack","`GtkStack` is a container which only shows one of its children at a time."],["StackBuilder","A builder for generating a [`Stack`]."],["StackPage","`GtkStackPage` is an auxiliary class used by `GtkStack`."],["StackPageBuilder","A builder for generating a [`StackPage`]."],["StackSidebar","A `GtkStackSidebar` uses a sidebar to switch between `GtkStack` pages."],["StackSidebarBuilder","A builder for generating a [`StackSidebar`]."],["StackSwitcher","The `GtkStackSwitcher` shows a row of buttons to switch between `GtkStack` pages."],["StackSwitcherBuilder","A builder for generating a [`StackSwitcher`]."],["StateFlags","Describes a widget state."],["Statusbar","A `GtkStatusbar` widget is usually placed along the bottom of an application’s main [class`Gtk.Window`]."],["StatusbarBuilder","A builder for generating a [`Statusbar`]."],["StringFilter","`GtkStringFilter` determines whether to include items by comparing strings to a fixed search term."],["StringFilterBuilder","A builder for generating a [`StringFilter`]."],["StringList","`GtkStringList` is a list model that wraps an array of strings."],["StringObject","`GtkStringObject` is the type of items in a `GtkStringList`."],["StringSorter","`GtkStringSorter` is a `GtkSorter` that compares strings."],["StringSorterBuilder","A builder for generating a [`StringSorter`]."],["StyleContext","`GtkStyleContext` stores styling information affecting a widget."],["StyleContextBuilder","A builder for generating a [`StyleContext`]."],["StyleContextPrintFlags","Flags that modify the behavior of [`crate::prelude::StyleContextExt::to_string()`]."],["StyleProvider","`GtkStyleProvider` is an interface for style information used by `GtkStyleContext`."],["Switch","`GtkSwitch` is a “light switch” that has two states: on or off."],["SwitchBuilder","A builder for generating a [`Switch`]."],["Text","The `GtkText` widget is a single-line text entry widget."],["TextBuffer","Stores text and attributes for display in a `GtkTextView`."],["TextBufferBuilder","A builder for generating a [`TextBuffer`]."],["TextBuilder","A builder for generating a [`Text`]."],["TextChildAnchor","A `GtkTextChildAnchor` is a spot in a `GtkTextBuffer` where child widgets can be “anchored”."],["TextIter","An iterator for the contents of a `GtkTextBuffer`."],["TextMark","A `GtkTextMark` is a position in a `GtkTextbuffer` that is preserved across modifications."],["TextMarkBuilder","A builder for generating a [`TextMark`]."],["TextSearchFlags","Flags affecting how a search is done."],["TextTag","A tag that can be applied to text contained in a `GtkTextBuffer`."],["TextTagBuilder","A builder for generating a [`TextTag`]."],["TextTagTable","The collection of tags in a `GtkTextBuffer`"],["TextView","A widget that displays the contents of a [class`Gtk.TextBuffer`]."],["TextViewBuilder","A builder for generating a [`TextView`]."],["TickCallbackId",""],["ToggleButton","A `GtkToggleButton` is a button which remains “pressed-in” when clicked."],["ToggleButtonBuilder","A builder for generating a [`ToggleButton`]."],["Tooltip","`GtkTooltip` is an object representing a widget tooltip."],["TreeDragDest","Interface for Drag-and-Drop destinations in `GtkTreeView`."],["TreeDragSource","Interface for Drag-and-Drop destinations in `GtkTreeView`."],["TreeExpander","`GtkTreeExpander` is a widget that provides an expander for a list."],["TreeExpanderBuilder","A builder for generating a [`TreeExpander`]."],["TreeIter","The [`crate::TreeIter`] is the primary structure for accessing a [`crate::TreeModel`]. Models are expected to put a unique integer in the `stamp` member, and put model-specific data in the three `user_data` members."],["TreeListModel","`GtkTreeListModel` is a list model that can create child models on demand."],["TreeListModelBuilder","A builder for generating a [`TreeListModel`]."],["TreeListRow","`GtkTreeListRow` is used by `GtkTreeListModel` to represent items."],["TreeListRowBuilder","A builder for generating a [`TreeListRow`]."],["TreeListRowSorter","`GtkTreeListRowSorter` is a special-purpose sorter that will apply a given sorter to the levels in a tree."],["TreeListRowSorterBuilder","A builder for generating a [`TreeListRowSorter`]."],["TreeModel","The tree interface used by `TreeView`"],["TreeModelFilter","A `TreeModel` which hides parts of an underlying tree model"],["TreeModelFilterBuilder","A builder for generating a [`TreeModelFilter`]."],["TreeModelFlags","These flags indicate various properties of a [`crate::TreeModel`]."],["TreeModelSort","A `TreeModel` which makes an underlying tree model sortable"],["TreeModelSortBuilder","A builder for generating a [`TreeModelSort`]."],["TreePath","An opaque structure representing a path to a row in a model."],["TreeRowReference","A `TreeRowReference` tracks model changes so that it always refers to the same row (a [`crate::TreePath`] refers to a position, not a fixed row). Create a new `TreeRowReference` with [`Self::new()`]."],["TreeSelection","The selection object for `TreeView`"],["TreeSelectionBuilder","A builder for generating a [`TreeSelection`]."],["TreeSortable","The interface for sortable models used by `TreeView`"],["TreeStore","A tree-like data structure that can be used with the `TreeView`"],["TreeView","A widget for displaying both trees and lists"],["TreeViewBuilder","A builder for generating a [`TreeView`]."],["TreeViewColumn","A visible column in a `TreeView` widget"],["TreeViewColumnBuilder","A builder for generating a [`TreeViewColumn`]."],["Video","`GtkVideo` is a widget to show a `GtkMediaStream` with media controls."],["VideoBuilder","A builder for generating a [`Video`]."],["Viewport","`GtkViewport` implements scrollability for widgets that lack their own scrolling capabilities."],["ViewportBuilder","A builder for generating a [`Viewport`]."],["VolumeButton","`GtkVolumeButton` is a `GtkScaleButton` subclass tailored for volume control."],["VolumeButtonBuilder","A builder for generating a [`VolumeButton`]."],["Widget","The base class for all widgets."],["WidgetPaintable","`GtkWidgetPaintable` is a `GdkPaintable` that displays the contents of a widget."],["WidgetPaintableBuilder","A builder for generating a [`WidgetPaintable`]."],["Window","A `GtkWindow` is a toplevel window which can contain other widgets."],["WindowBuilder","A builder for generating a [`Window`]."],["WindowControls","`GtkWindowControls` shows window frame controls."],["WindowControlsBuilder","A builder for generating a [`WindowControls`]."],["WindowGroup","`GtkWindowGroup` makes group of windows behave like separate applications."],["WindowHandle","`GtkWindowHandle` is a titlebar area widget."],["WindowHandleBuilder","A builder for generating a [`WindowHandle`]."]],"type":[["Allocation",""]]});